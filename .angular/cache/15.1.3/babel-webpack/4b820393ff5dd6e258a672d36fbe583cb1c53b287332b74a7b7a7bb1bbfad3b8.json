{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppModule = void 0;\nconst public_api_1 = require(\"projects/storage/src/public-api\");\nconst ngx_indexed_db_1 = require(\"ngx-indexed-db\");\nconst platform_browser_1 = require(\"@angular/platform-browser\");\nconst app_routing_module_1 = require(\"./app-routing.module\");\nconst app_component_1 = require(\"./app.component\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"ngx-indexed-db\");\nconst dbConfig = {\n  name: 'dnd-pan-db',\n  version: 15,\n  objectStoresMeta: [{\n    store: 'user',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'bubbles',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'campaigns',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'encounters',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'players',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'npc',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'items',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'classes',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'races',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'backgrounds',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'feats',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'spells',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'monsters',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'instanceitems',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'instanceclasses',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'instanceraces',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'instancebackgrounds',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'instancefeats',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'instancespells',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }, {\n    store: 'instancemonsters',\n    storeConfig: {\n      keyPath: 'databasekey',\n      autoIncrement: false\n    },\n    storeSchema: [{\n      name: 'databasekey',\n      keypath: 'databasekey',\n      options: {\n        unique: true\n      }\n    }, {\n      name: 'entity',\n      keypath: 'entity',\n      options: {\n        unique: false\n      }\n    }]\n  }]\n};\nclass AppModule {}\nexports.AppModule = AppModule;\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [app_component_1.AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [public_api_1.TnkStorage, ngx_indexed_db_1.NgxIndexedDBService],\n  imports: [platform_browser_1.BrowserModule, app_routing_module_1.AppRoutingModule, ngx_indexed_db_1.NgxIndexedDBModule, ngx_indexed_db_1.NgxIndexedDBModule.forRoot(dbConfig)]\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}